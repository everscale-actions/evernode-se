name: Main workflow

on: [ push ]  

env:
  TONOS_SE_OWNER: tonlabs
  TONOS_SE_REPO: tonos-se
  TONOS_SE_VERSION: 0.25.0
jobs:
  build-node:
    name: Build Node SE ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: 🏃 Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ env.TONOS_SE_OWNER }}/${{ env.TONOS_SE_REPO }}
          ref: ${{ env.TONOS_SE_VERSION }}

      - name: 🔨 Generate Cargo.lock
        working-directory: ton-node-se
        env:
          CARGO_TERM_COLOR: always
        run: cargo generate-lockfile

      - name: ⚡ Cache cargo
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: |
            ${{ runner.os }}-cargo-${{ hashFiles('ton-node-se/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: ⚡ Cache target
        uses: actions/cache@v2
        with:
          path: ton-node-se/target
          key: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('ton-node-se/Cargo.lock') }}
            ${{ runner.os }}-cargo-target

      - name: 🔨 Build
        working-directory: ton-node-se
        env:
          CARGO_TERM_COLOR: always
        run: cargo build --release

      - name: 🔨 Generate node folder
        env:
          PUBLISH_FOLDER: node
        run: |
          mkdir -p ${{ env.PUBLISH_FOLDER }}
          if [ -f "ton-node-se/target/release/ton_node_startup" ]; then cp ton-node-se/target/release/ton_node_startup ${{ env.PUBLISH_FOLDER }}; fi
          if [ -f "ton-node-se/target/release/ton_node_startup.exe" ]; then cp ton-node-se/target/release/ton_node_startup.exe ${{ env.PUBLISH_FOLDER }}; fi          
          cp ton-node-se/config/log_cfg.yml ${{ env.PUBLISH_FOLDER }}
          cp ton-node-se/config/cfg_startup ${{ env.PUBLISH_FOLDER }}
          cp ton-node-se/config/key01 ${{ env.PUBLISH_FOLDER }}
          cp ton-node-se/config/pub01 ${{ env.PUBLISH_FOLDER }}

      - name: 'Tar files'
        run: tar -cvf node-${{ matrix.os }}.tar ${{ env.PUBLISH_FOLDER }}

      - name: 📚 Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: node-${{ matrix.os }}
          path: node-${{ matrix.os }}.tar
          if-no-files-found: error           
          
  prepare-artifacts:
    needs:
      - build-node
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - name: 🎣 Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts        
        
      - name: 'Merge tar files'
        working-directory: artifacts
        run: |
          tar -cf release-${{ matrix.os }}.tar -T /dev/null
          tar --concatenate --file=release-${{ matrix.os }}.tar node-${{ matrix.os }}.tar
          
      - name: 📚 Publish artifact
        uses: actions/upload-artifact@v2
        with:          
          name: release-${{ matrix.os }}
          path: artifacts/release-${{ matrix.os }}.tar
          if-no-files-found: error

  publish:
    name: Create Release
    runs-on: ubuntu-latest  
    needs:
      - prepare-artifacts
    steps: 
      - name: 🎣 Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
   
      - name: 🍸 Publish release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.TONOS_SE_VERSION }}"
          prerelease: false
          title: "Node SE binaries ${{ env.TONOS_SE_VERSION }}"
          files: artifacts/release-*.zip